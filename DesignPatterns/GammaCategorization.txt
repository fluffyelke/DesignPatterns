Design patterns are split typically in 3 different categories.

1. Creational Patterns.
   - Deals with the creation(construction) of objects
    - Explicit(constructor) - when we provide the arguments for the constructor
        vs
    - Implicit(Dependancy Injection, reflections, etc...) 
            when the object is construct with some type of conversion behind the scene
    - Wholesale(signle statment) - when is good to call the constructor with a single statement to create an object.
        vs
    - piecewise(step-by-step) - when we have to call few steps to create an object. before is ready to use.

2. Structural Patterns.
    - Concerned with the structure(e.g. class members)
    - Many patterns are wrappers that mimic the underlying class interface.
    - Stress the importance of good API design

3. Behavioral Patterns.
    - They are all different, no central theme.
